syntax = "proto3";


package com.wisc.raft.proto;

service RaftService{
  rpc RequestVotes(RequestVote) returns (ResponseVote);
  rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse);
};

message RequestVote {
  optional string candidateId = 1;
  optional uint64 term = 2;
  optional uint64 leaderLastAppliedTerm = 3;
  optional uint64 leaderLastAppliedIndex = 4;
};

message ResponseVote {
  optional sint64 term = 1;
  optional bool grant = 2;
  optional sint64 candidateLastLogIndex = 3;
  optional sint64 candidateLastAppliedLogIndex = 4;
};

message Command {
  optional string commandType = 1;
  optional sint64 key = 2;
  optional sint64 value = 3;
};

message LogEntry {
  optional sint64 term = 1;
  optional string index = 2;
  optional Command command = 3;
  optional string requestId = 4;
  
};

message AppendEntriesRequest {
  optional string leaderId = 1;
  optional sint64 term = 2;
  optional sint64 lastAppendedLogIndex = 3;
  optional sint64 lastAppendedLogTerm = 4;
  optional sint64 commitIndex = 5;
  repeated LogEntry entries = 6;
  optional sint64 indexTracked = 7;
  optional sint64 lastAppliedIndex = 8;
};

message AppendEntriesResponse {
  optional sint64 term = 1;
  optional bool success = 2;
  optional sint64 lastMatchIndex = 3;
  optional sint64 lastMatchTerm = 4;

};

message Endpoint {
  optional string host = 1;
  optional sint32 port = 2;
};

message ServerConnect {
  optional sint32 server_id = 1;
  optional Endpoint endpoint = 2;
};